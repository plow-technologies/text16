cabal-version:  >= 1.10
name:           text16
version:        1.2.5.0

homepage:       https://github.com/haskell/text
bug-reports:    https://github.com/haskell/text/issues
synopsis:       An efficient packed Unicode text type.
description:
    .
    An efficient packed, immutable Unicode text type (both strict and
    lazy), with a powerful loop fusion optimization framework.
    .
    The 'Text16' type represents Unicode character strings, in a time and
    space-efficient manner. This package provides text processing
    capabilities that are optimized for performance critical use, both
    in terms of large data quantities and high speed.
    .
    The 'Text16' type provides character-encoding, type-safe case
    conversion via whole-string case conversion functions (see "Data.Text16").
    It also provides a range of functions for converting 'Text16' values to
    and from 'ByteStrings', using several standard encodings
    (see "Data.Text16.Encoding").
    .
    Efficient locale-sensitive support for text IO is also supported
    (see "Data.Text16.IO").
    .
    These modules are intended to be imported qualified, to avoid name
    clashes with Prelude functions, e.g.
    .
    > import qualified Data.Text16 as T
    .
    == ICU Support
    .
    To use an extended and very rich family of functions for working
    with Unicode text (including normalization, regular expressions,
    non-standard encodings, text breaking, and locales), see
    the [text-icu package](https://hackage.haskell.org/package/text-icu)
    based on the well-respected and liberally
    licensed [ICU library](http://site.icu-project.org/).
    .
    == Internal Representation: UTF-16 vs. UTF-8
    .
    Currently the @text@ library uses UTF-16 as its internal representation
    which is [neither a fixed-width nor always the most dense representation](http://utf8everywhere.org/)
    for Unicode text. We're currently investigating the feasibility
    of [changing Text16's internal representation to UTF-8](https://github.com/text-utf8)
    and if you need such a 'Text16' type right now you might be interested in using the spin-off
    packages <https://hackage.haskell.org/package/text-utf8 text-utf8> and
    <https://hackage.haskell.org/package/text-short text-short>.


license:        BSD2
license-file:   LICENSE
author:         Bryan O'Sullivan <bos@serpentine.com>
maintainer:     Haskell Text16 Team <andrew.lelechenko@gmail.com>, Core Libraries Committee
copyright:      2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper
category:       Data, Text16
build-type:     Simple
tested-with:    GHC==9.0.1,
                GHC==8.10.4, GHC==8.8.4, GHC==8.6.5, GHC==8.4.4,
                GHC==8.2.2, GHC==8.0.2
extra-source-files:
    -- scripts/CaseFolding.txt
    -- scripts/SpecialCasing.txt
    README.markdown
    changelog.md
    include/*.h
    scripts/*.hs
    tests/literal-rule-test.sh
    tests/LiteralRuleTest.hs

flag developer
  description: operate in developer mode
  default: False
  manual: True

library
  c-sources:    cbits/cbits.c
  include-dirs: include
  hs-source-dirs: src

  exposed-modules:
    Data.Text16
    Data.Text16.Array
    Data.Text16.Encoding
    Data.Text16.Encoding.Error
    Data.Text16.Foreign
    Data.Text16.IO
    Data.Text16.Internal
    Data.Text16.Internal.Builder
    Data.Text16.Internal.Builder.Functions
    Data.Text16.Internal.Builder.Int.Digits
    Data.Text16.Internal.Builder.RealFloat.Functions
    Data.Text16.Internal.ByteStringCompat
    Data.Text16.Internal.PrimCompat
    Data.Text16.Internal.Encoding.Fusion
    Data.Text16.Internal.Encoding.Fusion.Common
    Data.Text16.Internal.Encoding.Utf16
    Data.Text16.Internal.Encoding.Utf32
    Data.Text16.Internal.Encoding.Utf8
    Data.Text16.Internal.Functions
    Data.Text16.Internal.Fusion
    Data.Text16.Internal.Fusion.CaseMapping
    Data.Text16.Internal.Fusion.Common
    Data.Text16.Internal.Fusion.Size
    Data.Text16.Internal.Fusion.Types
    Data.Text16.Internal.IO
    Data.Text16.Internal.Lazy
    Data.Text16.Internal.Lazy.Encoding.Fusion
    Data.Text16.Internal.Lazy.Fusion
    Data.Text16.Internal.Lazy.Search
    Data.Text16.Internal.Private
    Data.Text16.Internal.Read
    Data.Text16.Internal.Search
    Data.Text16.Internal.Unsafe
    Data.Text16.Internal.Unsafe.Char
    Data.Text16.Internal.Unsafe.Shift
    Data.Text16.Lazy
    Data.Text16.Lazy.Builder
    Data.Text16.Lazy.Builder.Int
    Data.Text16.Lazy.Builder.RealFloat
    Data.Text16.Lazy.Encoding
    Data.Text16.Lazy.IO
    Data.Text16.Lazy.Internal
    Data.Text16.Lazy.Read
    Data.Text16.Read
    Data.Text16.Unsafe

  other-modules:
    Data.Text16.Show

  build-depends:
    array            >= 0.3 && < 0.6,
    base             >= 4.9 && < 5,
    binary           >= 0.5 && < 0.9,
    bytestring       >= 0.10.4 && < 0.12,
    deepseq          >= 1.1 && < 1.5,
    ghc-prim         >= 0.2 && < 0.9,
    template-haskell >= 2.5 && < 2.19,
    text

  ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
  if flag(developer)
    ghc-options: -fno-ignore-asserts
    cpp-options: -DASSERTS

  default-language: Haskell2010
  default-extensions:
    NondecreasingIndentation
  other-extensions:
    BangPatterns
    CPP
    DeriveDataTypeable
    ExistentialQuantification
    ForeignFunctionInterface
    GeneralizedNewtypeDeriving
    MagicHash
    OverloadedStrings
    Rank2Types
    RankNTypes
    RecordWildCards
    Safe
    ScopedTypeVariables
    TemplateHaskellQuotes
    Trustworthy
    TypeFamilies
    UnboxedTuples
    UnliftedFFITypes

source-repository head
  type:     git
  location: https://github.com/haskell/text

test-suite tests
  type:           exitcode-stdio-1.0
  ghc-options:
    -Wall -threaded -rtsopts

  hs-source-dirs: tests
  main-is:        Tests.hs
  other-modules:
    Tests.Inspection.Lazy
    Tests.Inspection.Strict
    Tests.Lift
    Tests.Properties
    Tests.Properties.Basics
    Tests.Properties.Builder
    Tests.Properties.Folds
    Tests.Properties.Instances
    Tests.Properties.LowLevel
    Tests.Properties.Read
    Tests.Properties.Substrings
    Tests.Properties.Text16
    Tests.Properties.Transcoding
    Tests.QuickCheckUtils
    Tests.Regressions
    Tests.SlowFunctions
    Tests.Utils

  build-depends:
    QuickCheck >= 2.14.1 && < 2.15,
    base <5,
    bytestring,
    deepseq,
    directory,
    quickcheck-unicode >= 1.0.1.0,
    random,
    tasty,
    tasty-hunit,
    tasty-inspection-testing,
    tasty-quickcheck,
    template-haskell,
    text16

  default-language: Haskell2010
  default-extensions: NondecreasingIndentation

benchmark text-benchmarks
  type:           exitcode-stdio-1.0

  ghc-options:    -Wall -O2 -rtsopts
  if impl(ghc >= 8.10)
    ghc-options:  "-with-rtsopts=-A32m --nonmoving-gc"
  else
    ghc-options:  "-with-rtsopts=-A32m"

  build-depends:  base,
                  binary,
                  bytestring >= 0.10.4,
                  bytestring-lexing >= 0.5.0,
                  containers,
                  deepseq,
                  filepath,
                  stringsearch,
                  tasty-bench >= 0.2,
                  text16,
                  transformers,
                  vector

  c-sources:      benchmarks/cbits-bench/time_iconv.c
  hs-source-dirs: benchmarks/haskell
  main-is:        Benchmarks.hs
  other-modules:
    Benchmarks.Builder
    Benchmarks.Concat
    Benchmarks.DecodeUtf8
    Benchmarks.EncodeUtf8
    Benchmarks.Equality
    Benchmarks.FileRead
    Benchmarks.FoldLines
    Benchmarks.Mul
    Benchmarks.Multilang
    Benchmarks.Programs.BigTable
    Benchmarks.Programs.Cut
    Benchmarks.Programs.Fold
    Benchmarks.Programs.Sort
    Benchmarks.Programs.StripTags
    Benchmarks.Programs.Throughput
    Benchmarks.Pure
    Benchmarks.ReadNumbers
    Benchmarks.Replace
    Benchmarks.Search
    Benchmarks.Stream
    Benchmarks.WordFrequencies

  default-language: Haskell2010
  default-extensions: NondecreasingIndentation
  other-extensions: DeriveGeneric
